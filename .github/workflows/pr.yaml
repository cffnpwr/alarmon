name: Pull Request CI

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci-base.toml"
  CARGO_TERM_COLOR: always

jobs:
  changed-files:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      rust: ${{ steps.changes.outputs.rust }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            rust:
              - 'src/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '**/Cargo.toml'
              - 'rustfmt.toml'

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    needs: changed-files
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        if: needs.changed-files.outputs.rust == 'true'

      - name: Cache apt packages (Linux)
        if: matrix.os == 'ubuntu-latest' && needs.changed-files.outputs.rust == 'true'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/pr.yaml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Cache Homebrew packages (macOS)
        if: matrix.os == 'macos-latest' && needs.changed-files.outputs.rust == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/pr.yaml') }}
          restore-keys: |
            ${{ runner.os }}-brew-

      - name: Install libpcap development libraries (Linux)
        if: matrix.os == 'ubuntu-latest' && needs.changed-files.outputs.rust == 'true'
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y --no-install-recommends libpcap-dev

      - name: Install libpcap development libraries (macOS)
        if: matrix.os == 'macos-latest' && needs.changed-files.outputs.rust == 'true'
        run: |
          brew install libpcap

      - name: Install mise
        uses: jdx/mise-action@v2
        if: needs.changed-files.outputs.rust == 'true'

      - name: Install tools with mise
        if: needs.changed-files.outputs.rust == 'true'
        run: |
          mise trust
          mise install

      - name: Add Rust components
        if: needs.changed-files.outputs.rust == 'true'
        run: |
          rustup component add rustfmt
          rustup component add clippy

      - name: Check code formatting
        if: needs.changed-files.outputs.rust == 'true'
        run: cargo fmt -- --check

      - name: Run cargo check
        if: needs.changed-files.outputs.rust == 'true'
        run: cargo check --all-targets --all-features

      - name: Run clippy
        if: needs.changed-files.outputs.rust == 'true'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        if: needs.changed-files.outputs.rust == 'true'
        run: cargo test --all-features --all

  coverage:
    name: Code Coverage
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    env:
      MISE_OVERRIDE_CONFIG_FILENAMES: "mise.ci-base.toml:mise.cov.toml"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache apt packages (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/pr.yaml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Cache Homebrew packages (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('.github/workflows/pr.yaml') }}
          restore-keys: |
            ${{ runner.os }}-brew-

      - name: Install libpcap development libraries (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y --no-install-recommends libpcap-dev

      - name: Install libpcap development libraries (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libpcap

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install tools with mise
        run: |
          mise trust
          mise install

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --all --lcov --output-path lcov-${{ matrix.os }}.info

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: lcov-${{ matrix.os }}.info

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: coverage
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/pr.yaml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install lcov
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install -y --no-install-recommends lcov

      - name: Merge coverage files
        run: |
          files=(lcov-*.info)
          if [ ${#files[@]} -gt 1 ]; then
            lcov --output-file merged-lcov.info "${files[@]/#/--add-tracefile }"
          else
            cp "${files[0]}" merged-lcov.info
          fi

      - name: Comment coverage report
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: merged-lcov.info
